using System.Reflection;

namespace Base64SourceGenerator;

public partial class Base64SourceGenerator
{
    private const string AttributeName = "Base64Attribute";
    private static readonly string AttributeNamespace = typeof(Base64SourceGenerator).Namespace!;
    private static readonly string AttributeFullname = $"{AttributeNamespace}.{AttributeName}";
    private static readonly AssemblyName AssemblyName = typeof(Base64SourceGenerator).Assembly.GetName();

    // lang=c#
    private static readonly string AttributeSourceCode = $$"""
                                                           // <auto-generated>
                                                           namespace {{AttributeNamespace}}
                                                           {
                                                               [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{AssemblyName.Name}}", "{{AssemblyName.Version}}")]
                                                               [global::System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple = false, Inherited = false)]
                                                               internal sealed class {{AttributeName}} : global::System.Attribute
                                                               {
                                                                   public {{AttributeName}}(string fileName) {}
                                                               }
                                                           }
                                                           """;
}